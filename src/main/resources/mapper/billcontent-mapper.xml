<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bill.repository.BillContentMapper">
    <resultMap id="BaseResultMap" type="com.bill.po.BillContentPo">
        <result column="bill_no" property="billNo" jdbcType="VARCHAR"/>
        <result column="uid" property="uid" jdbcType="VARCHAR"/>
        <result column="bill_date" property="billDate" jdbcType="VARCHAR"/>
        <result column="bill_type" property="billType" jdbcType="VARCHAR"/>
        <result column="pay_type" property="payType" jdbcType="VARCHAR"/>
        <result column="amount" property="amount" jdbcType="DECIMAL"/>
        <result column="comment" property="comment" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        bill_no,
        uid,
        bill_date,
        bill_type,
        pay_type,
        amount,
        comment,
        create_time,
        update_time
    </sql>

    <sql id="Base_Column_No_Time">
        bill_no,
        uid,
        bill_date,
        bill_type,
        pay_type,
        amount,
        comment
    </sql>

    <insert id="insert" parameterType="com.bill.po.BillContentPo">
        insert into bill_content
        (
        <include refid="Base_Column_No_Time"/>
        )
        values (
        #{billNo},
        #{uid},
        #{billDate},
        #{billType},
        #{payType},
        #{amount},
        #{comment}
        )
    </insert>

    <update id="update" parameterType="com.bill.po.BillContentPo">
        update bill_content
        <set>
            <if test="billDate != null and billDate != ''">
                bill_date == #{billDate},
            </if>
            <if test="billType != null and billType != ''">
                billType = #{billType},
            </if>
            <if test="payType != null and payType != ''">
                payType = #{payType},
            </if>
            <if test="amount != null and amount != ''">
                amount = #{amount},
            </if>
            <if test="comment != null and comment != ''">
                comment = #{comment}
            </if>
        </set>
        where bill_no = #{billNo}
    </update>

    <select id="selectAllCount" resultType="java.lang.Integer">
        select count(*)
        from bill_content
    </select>

    <select id="selectByPage" resultMap="BaseResultMap">
        select
        bill.bill_no as bill_no,
        bill.uid as uid,
        bill.bill_date as bill_date,
        type.type_name as bill_type,
        common.code_name as pay_type,
        bill.amount as amount,
        bill.comment as comment,
        bill.create_time as create_time,
        bill.update_time as update_time
        from bill_content as bill
        left join bill_type as type
        on bill.bill_type = type.type_id
        left join common as common
        on bill.pay_type = common.code_value
        and common.code_id = '${@com.bill.common.ConstantValue@PAY_TYPE_CODE_ID}'
        where type.delete_flag = 0
        and common.delete_flag = 0
        order by bill_date desc, type_name, pay_type
        limit #{start}, #{size}
    </select>

    <select id="selectByBillNo" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bill_content
        where bill_no = #{billNo}
    </select>
</mapper>